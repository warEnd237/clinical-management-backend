
services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: clinical-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-clinical_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clinical-network

  # Spring Boot Backend
  backend:
    build:
      context: ./clinical-management-fresh
      dockerfile: Dockerfile
    container_name: clinical-backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-clinical_db}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGINS: http://localhost:4200,http://frontend
    ports:
      - "${SERVER_PORT:-8081}:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clinical-network
    restart: unless-stopped

  # Angular Frontend
  frontend:
    build:
      context: ./clinical-management-frontend
      dockerfile: Dockerfile
    container_name: clinical-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - clinical-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  clinical-network:
    driver: bridge
